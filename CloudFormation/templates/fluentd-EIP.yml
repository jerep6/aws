---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Fluentd instance'


###############################################################################
### Parameters
##############################################################################
Parameters:
  KeyName:
    Description: Optional key pair of the ec2-user to establish a SSH connection.
    Type: String
    Default: ''
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Identifiant of the VPC
  SubnetsIds:
    Description: SubnetsIds of the autoscaling group
    Type: List<AWS::EC2::Subnet::Id>
  InstanceType:
    Description: 'Instance type'
    Type: String
    Default: 't2.nano'
  ElasticsearchUrl:
    Type: String
    Default: ''
    Description: Url of the Elasticsearch to send logs
  AWSsign:
    Type: String
    Default: 'false'
    Description: indicate if elasticsearch request are signed or not
    AllowedValues:
    - true
    - false
  TrustIP1:
    Type: String
    Default: ''
    Description: 'Ip 1 to trust'
  TrustIP2:
    Type: String
    Default: ''
    Description: 'Ip 2 to trust'
  TrustIP3:
    Type: String
    Default: ''
    Description: 'Ip 3 to trust'

###############################################################################
### Mappings
###############################################################################

Mappings:
  RegionMap:
    'ap-south-1':
      AMI: 'ami-9fc7b0f0'
    'eu-west-2':
      AMI: 'ami-bfe0eadb'
    'eu-west-1':
      AMI: 'ami-e5083683'
    'ap-northeast-2':
      AMI: 'ami-94bb6dfa'
    'ap-northeast-1':
      AMI: 'ami-9f0c67f8'
    'sa-east-1':
      AMI: 'ami-bb40d8d7'
    'ca-central-1':
      AMI: 'ami-eb20928f'
    'ap-southeast-1':
      AMI: 'ami-4dd6782e'
    'ap-southeast-2':
      AMI: 'ami-28cff44b'
    'eu-central-1':
      AMI: 'ami-af0fc0c0'
    'us-east-1':
      AMI: 'ami-9be6f38c'
    'us-east-2':
      AMI: 'ami-38cd975d'
    'us-west-1':
      AMI: 'ami-b73d6cd7'
    'us-west-2':
      AMI: 'ami-1e299d7e'


###############################################################################
### Conditions
###############################################################################
Conditions:
  isAWSSign: !Equals [!Ref AWSsign, 'true']
  hasBastion: !Not [!Equals [!Ref BastionSecurityGroup, 'sg-xxxxxxxx']]
  isIP1: !Not [!Equals [!Ref TrustIP1, '']]
  isIP2: !Not [!Equals [!Ref TrustIP2, '']]
  isIP3: !Not [!Equals [!Ref TrustIP3, '']]

###############################################################################
### Outputs
###############################################################################

Outputs:
  SecurityGroup:
    Description: 'Use this Security Group to reference incoming traffic from the SSH bastion host/instance.'
    Value: !Ref SecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroup'
  IPAddress:
    Description: 'The public IP address of the SSH bastion host/instance.'
    Value: !Ref EIP
    Export:
      Name: !Sub '${AWS::StackName}-IPAddress'


###############################################################################
### Resources
###############################################################################

Resources:
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for fluentd
      SecurityGroupIngress:
      - !If
        - hasBastion
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref BastionSecurityGroup
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'

      - !If
        - isIP1
        -
          IpProtocol: tcp
          FromPort: 24224
          ToPort: 24224
          CidrIp: !Ref TrustIP1
        - !Ref AWS::NoValue

      - !If
        - isIP2
        -
          IpProtocol: tcp
          FromPort: 24224
          ToPort: 24224
          CidrIp: !Ref TrustIP2
        - !Ref AWS::NoValue

      - !If
        - isIP3
        -
          IpProtocol: tcp
          FromPort: 24224
          ToPort: 24224
          CidrIp: !Ref TrustIP3
        - !Ref AWS::NoValue

      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: SG for fluentd


  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
      - !Ref IAMRole

  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'ec2.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: awslogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
              - 'logs:DescribeLogStreams'
              Resource:
              - !GetAtt [LogGroupFluentd, Arn]
        - !If
          - isAWSSign
          -
            PolicyName: 'Elasticsearch'
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - "es:ESHttpGet"
                - "es:ESHttpHead"
                - "es:ESHttpPost"
                - "es:ESHttpPut"
                Resource:
                - '*'
          - !Ref 'AWS::NoValue'

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          default:
            !If
            - isAWSSign
            - [awslogs, fluentd-repo, fluentd-common, fluentd-config-aws, fluentd-service]
            - [awslogs, fluentd-repo, fluentd-common, fluentd-config, fluentd-service]
        awslogs:
          packages:
            yum:
              awslogs: []
          files:
            '/etc/awslogs/awscli.conf':
              content: !Sub |
                [default]
                region = ${AWS::Region}
                [plugins]
                cwlogs = cwlogs
              mode: '000644'
              owner: root
              group: root
            '/etc/awslogs/awslogs.conf':
              content: !Sub |
                [general]
                state_file = /var/lib/awslogs/agent-state
                [/var/log/messages]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/messages
                log_stream_name = {instance_id}/var/log/messages
                log_group_name = ${LogGroupFluentd}
                [/var/log/secure]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/secure
                log_stream_name = {instance_id}/var/log/secure
                log_group_name = ${LogGroupFluentd}
                [/var/log/cron]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/cron
                log_stream_name = {instance_id}/var/log/cron
                log_group_name = ${LogGroupFluentd}
                [/var/log/cloud-init.log]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/cloud-init.log
                log_stream_name = {instance_id}/var/log/cloud-init.log
                log_group_name = ${LogGroupFluentd}
                [/var/log/cfn-init.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/cfn-init.log
                log_stream_name = {instance_id}/var/log/cfn-init.log
                log_group_name = ${LogGroupFluentd}
                [/var/log/cfn-hup.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/cfn-hup.log
                log_stream_name = {instance_id}/var/log/cfn-hup.log
                log_group_name = ${LogGroupFluentd}
                [/var/log/cfn-init-cmd.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/cfn-init-cmd.log
                log_stream_name = {instance_id}/var/log/cfn-init-cmd.log
                log_group_name = ${LogGroupFluentd}
                [/var/log/cloud-init-output.log]
                file = /var/log/cloud-init-output.log
                log_stream_name = {instance_id}/var/log/cloud-init-output.log
                log_group_name = ${LogGroupFluentd}
                [/var/log/dmesg]
                file = /var/log/dmesg
                log_stream_name = {instance_id}/var/log/dmesg
                log_group_name = ${LogGroupFluentd}
                [/var/log/td-agent]
                file = /var/log/td-agent/td-agent.log
                log_stream_name = {instance_id}/var/log/td-agent/td-agent.log
                log_group_name = ${LogGroupFluentd}
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              awslogs:
                enabled: true
                ensureRunning: true
                packages:
                  yum:
                  - awslogs
                files:
                - '/etc/awslogs/awslogs.conf'
                - '/etc/awslogs/awscli.conf'

        fluentd-repo:
          files:
            '/etc/yum.repos.d/td.repo':
              content: |
                [treasuredata]
                name=TreasureData
                baseurl=http://packages.treasuredata.com/2/redhat/\$releasever/\$basearch
                gpgcheck=1
                gpgkey=https://packages.treasuredata.com/GPG-KEY-td-agent
          commands:
            install_key:
              command: rpm --import https://packages.treasuredata.com/GPG-KEY-td-agent

        fluentd-config-aws:
          files:
            '/etc/td-agent/td-agent.conf':
              content: !Sub |
                <source>
                  type forward
                  port 24224
                  bind 0.0.0.0
                </source>

                <match *.*>
                  #type stdout

                  # For Elasticsearch aws service (sign V4)
                  type "aws-elasticsearch-service"
                  # Index prefix
                  logstash_prefix affiliationfluentd
                  logstash_format true
                  include_tag_key
                  request_timeout 15s
                  reconnect_on_error true
                  template_name affiliationfluentd-*
                  template_file /etc/td-agent/elasticsearch.template.conf

                  <endpoint>
                    url ${ElasticsearchUrl}
                    region ${AWS::Region}
                    # access_key_id "secret"
                    # secret_access_key "seekret"
                  </endpoint>

                  # buffering
                  buffer_type memory
                  flush_interval 30s
                  # Size of each chunk. A chunck contains many events
                  buffer_chunk_limit 5m
                  # Nb max of chunk in the queue
                  buffer_queue_limit 64
                  retry_wait 15s
                </match>

              mode: '000644'
              owner: root
              group: root
          commands:
            install_plugin_elasticsearch-aws:
              command: /usr/sbin/td-agent-gem install fluent-plugin-aws-elasticsearch-service

        fluentd-config:
          files:
            '/etc/td-agent/td-agent.conf':
              content: !Sub |
                <source>
                  type forward
                  port 24224
                  bind 0.0.0.0
                </source>


                <match *.*>
                  #type stdout

                  # https://github.com/uken/fluent-plugin-elasticsearch
                  type elasticsearch
                  hosts ${ElasticsearchUrl}

                  # Index prefix
                  logstash_prefix affiliationfluentd
                  logstash_format true
                  include_tag_key
                  request_timeout 15s
                  reconnect_on_error true
                  template_name affiliationfluentd-*
                  template_file /etc/td-agent/elasticsearch.template.conf

                  # buffering
                  buffer_type memory
                  flush_interval 30s
                  # Size of each chunk. A chunck contains many events
                  buffer_chunk_limit 10m
                  # Nb max of chunk in the queue
                  buffer_queue_limit 64
                  retry_wait 15s
                </match>

              mode: '000644'
              owner: root
              group: root
          commands:
            install_plugin_elasticsearch:
              command: /usr/sbin/td-agent-gem install fluent-plugin-elasticsearch

        fluentd-common:
          packages:
            yum:
              td-agent: []
            files:
              '/etc/td-agent/elasticsearch.template.conf':
                content: !Sub |
                  {
                    "template": "affiliationfluentd-*",
                    "settings": {
                      "number_of_shards": 1,
                      "number_of_replicas": 0,
                      "index": {
                        "refresh_interval": "5s",
                        "query": { "default_field": "message" },
                        "routing": { "allocation.total_shards_per_node": 1 }
                      }
                    },
                    "mappings": {
                      "_default_": {
                        "_all": { "enabled": false, "omit_norms": true },
                        "_source": { "enabled": true },
                        "dynamic_templates": [
                          {
                            "string_fields": {
                              "match": "*",
                              "match_mapping_type": "string",
                              "mapping": {
                                "type": "string", "index": "analyzed", "omit_norms": true,
                                "fields": {
                                  "raw": { "type": "keyword", "ignore_above": 256 }
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "@timestamp": { "type": "date", "index": "not_analyzed" },
                          "@version": { "type": "keyword" },
                          "message": { "type": "text" },
                          "severity": { "type": "keyword" },
                          "fields": {
                            "type": "object",
                            "dynamic": true
                          }
                        }
                      }
                    }
                  }
                mode: '000644'
                owner: root
                group: root

        fluentd-service:
          services:
            sysvinit:
              td-agent:
                enabled: true
                ensureRunning: true
                packages:
                  - td-agent

    Properties:
      AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      InstanceType: !Ref InstanceType
      SecurityGroups:
      - !Ref SecurityGroup
      KeyName: !Ref KeyName
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -x
          INSTANCEID=$(curl -s -m 60 http://169.254.169.254/latest/meta-data/instance-id)
          aws --region ${AWS::Region} ec2 associate-address --instance-id $INSTANCEID --allocation-id ${EIP.AllocationId} && /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfiguration --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource AutoScalingGroup --region ${AWS::Region}


  AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      DesiredCapacity: 1
      LaunchConfigurationName: !Ref LaunchConfiguration
      MaxSize: 1
      MinSize: 1
      Tags:
      - Key: Name
        Value: !Sub 'affiliation-fluentd'
        PropagateAtLaunch: true
      VPCZoneIdentifier: !Ref SubnetsIds
      MetricsCollection:
      - Granularity: 1Minute
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT10M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        PauseTime: PT10M
        WaitOnResourceSignals: true